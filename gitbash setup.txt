Below are the commands we are going to use to upload files to GitHub with Git Bash

ls
cd
git init
git remote add origin [gitLink]
git remote -v
git add .
git commit -m "First commit"
git push origin master

ls- List all the files in the current directory

If your source code is in the different directory, you need to change the directory on git bash with command cd followed by directory or path.

cd - To change the directory

git init- This command initializes the git in the given path. You can see the .git hidden files after this command gets executed.

git remote add origin [gitLink]- gitLink denote the place where your code is stored in the remote repository

git add .- Add all the files in the local directory to the remote repository

git commit -m "First commit"- It establishes a connection with local repository

git push origin master- It establishes a connection with a remote repository and upload your source code or files to GitHub

Note: If you get fatal: remote origin already exists which means the connection is already established.

Above method helps to push files or project folder to GitHub using the command line.

$ git help
usage: git [--version] [--help] [-C <path>] [-c <name>=<value>]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           <command> [<args>]

These are common Git commands used in various situations:

start a working area (see also: git help tutorial)
   clone     Clone a repository into a new directory
   init      Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)
   add       Add file contents to the index
   mv        Move or rename a file, a directory, or a symlink
   restore   Restore working tree files
   rm        Remove files from the working tree and from the index

examine the history and state (see also: git help revisions)
   bisect    Use binary search to find the commit that introduced a bug
   diff      Show changes between commits, commit and working tree, etc
   grep      Print lines matching a pattern
   log       Show commit logs
   show      Show various types of objects
   status    Show the working tree status

grow, mark and tweak your common history
   branch    List, create, or delete branches
   commit    Record changes to the repository
   merge     Join two or more development histories together
   rebase    Reapply commits on top of another base tip
   reset     Reset current HEAD to the specified state
   switch    Switch branches
   tag       Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch     Download objects and refs from another repository
   pull      Fetch from and integrate with another repository or a local branch
   push      Update remote refs along with associated objects

'git help -a' and 'git help -g' list available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.
See 'git help git' for an overview of the system.

.